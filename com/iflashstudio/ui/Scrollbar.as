/**	 * iFlashStudio Scrollbar Component	 * Customizable Scrollbar	 *	 * @author		Hjupter Cerrud	 * @version		1.0.0	 * @private	 * @website     http://www.iflashstudio.com	 */package com.iflashstudio.ui {			import com.greensock.TweenMax;	import com.greensock.easing.*;	import flash.display.*;	import flash.events.*;	import flash.geom.*;	public class Scrollbar extends MovieClip {		private var target:MovieClip;		private var top:Number;		private var bottom:Number;		private var dragBot:Number;		private var range:Number;		private var ratio:Number;		private var sPos:Number;		private var sRect:Rectangle;		private var ctrl:Number;//This is to adapt to the target's position		private var trans:String;		private var timing:Number;		private var isUp:Boolean;		private var isDown:Boolean;		private var isArrow:Boolean;		private var isBar:Boolean;		private var arrowMove:Number;		private var upArrowHt:Number;		private var downArrowHt:Number;		private var sBuffer:Number;		private var rect:Rectangle;		public function Scrollbar():void {			trace("SCROLLBAR"+this.parent);			parent.addEventListener(MouseEvent.MOUSE_UP, stopScroll);						parent.addEventListener(MouseEvent.MOUSE_WHEEL,mouseWheelHandler);		}		//		public function init(Target:MovieClip, args:Object = null):void {			target = Target;			trans = args.ease || "easeOutExpo";			timing = args.time || .3;			if(args.arrows == undefined){				isArrow = true;			} else {				isArrow = args.arrows;			}						//if(args.scroller == undefined){				isBar = true;			/*} else {				isBar = args.scroller;			}		*/			sBuffer = args.buffer || 2;						if (target.height <= track.height) {				this.visible = false;			}						//			upArrowHt = upArrow.height;			downArrowHt = downArrow.height;			if (isArrow) {				top = scroller.y;				dragBot = (scroller.y + track.height) - scroller.height;				bottom = track.height - (scroller.height/sBuffer);			} else {				top = scroller.y;				dragBot = (scroller.y + track.height) - scroller.height;				bottom = track.height - (scroller.height/sBuffer);				upArrowHt = 0;				downArrowHt = 0;				removeChild(upArrow);				removeChild(downArrow);			}						range = bottom - top;			sRect = new Rectangle(0,top,0,dragBot);			ctrl = target.y;			//set Mask			isUp = false;			isDown = false;			arrowMove = 10;						if (isBar == false) {				trace("NO SCROLLER AND TRACK");				scroller.visible = false;				track.alpha = 0;								} else {				scroller.addEventListener(MouseEvent.MOUSE_DOWN, dragScroll);						}						if (isArrow) {				upArrow.buttonMode = true;				upArrow.addEventListener(Event.ENTER_FRAME, upArrowHandler);				upArrow.addEventListener(MouseEvent.MOUSE_DOWN, upScroll);				upArrow.addEventListener(MouseEvent.MOUSE_UP, stopScroll);				//				downArrow.buttonMode = true;				downArrow.addEventListener(Event.ENTER_FRAME, downArrowHandler);				downArrow.addEventListener(MouseEvent.MOUSE_DOWN, downScroll);				downArrow.addEventListener(MouseEvent.MOUSE_UP, stopScroll);			}			var square:Sprite = new Sprite();			square.graphics.beginFill(0xFF0000);			square.graphics.drawRect(target.x, target.y, target.width+5, (args.maskHeight || track.height+upArrowHt+downArrowHt));			parent.addChild(square);						target.mask = square;			//trace(target.width+5);			//TweenMax.to(target, .001,{scrollRect:{x:target.x,y:target.y,width:target.width+5,height:int(track.height+upArrowHt+downArrowHt)}});			//rect = new Rectangle(target.x, target.y, target.width+5, (track.height+upArrowHt+downArrowHt));			//target.scrollRect = rect;					}		public function upScroll(event:MouseEvent):void {			isUp = true;		}		public function downScroll(event:MouseEvent):void {			isDown = true;		}		public function upArrowHandler(event:Event):void {			if (isUp) {				if (scroller.y > top) {					scroller.y-=arrowMove;					if (scroller.y < top) {						scroller.y = top;					}					startScroll();				}			}		}		//		public function downArrowHandler(event:Event):void {			if (isDown) {				if (scroller.y < dragBot) {					scroller.y+=arrowMove;					if (scroller.y > dragBot) {						scroller.y = dragBot;					}					startScroll();				}			}		}		//		public function dragScroll(event:MouseEvent):void {						scroller.startDrag(false, sRect);			stage.addEventListener(MouseEvent.MOUSE_MOVE, moveScroll);		}		//		public function mouseWheelHandler(event:MouseEvent):void {			if (event.delta < 0) {				if (scroller.y < dragBot) {					scroller.y-=(event.delta*2);					if (scroller.y > dragBot) {						scroller.y = dragBot;					}					startScroll();				}			} else {				if (scroller.y > top) {					scroller.y-=(event.delta*2);					if (scroller.y < top) {						scroller.y = top;					}					startScroll();				}			}		}		//		public function stopScroll(event:MouseEvent):void {			isUp = false;			isDown = false;			scroller.stopDrag();			stage.removeEventListener(MouseEvent.MOUSE_MOVE, moveScroll);		}		//		public function moveScroll(event:MouseEvent):void {			startScroll();		}		public function startScroll():void {			ratio = (target.height - range)/range;			sPos = (scroller.y * ratio)-(ctrl*2);			//rect.y -= sPos;			//target.scrollRect = rect;			//TweenMax.to(target, 1,{scrollRect:{y:"+"+10}, ease:trans});			TweenMax.to(target, timing,{y:-sPos, ease:trans});		}	}}